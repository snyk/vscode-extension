import { strictEqual } from 'assert';
import { PackageJsonParser } from '../../../../../../snyk/snykOss/services/vulnerabilityCount/parsers/packageJsonParser';
import { LoggerMock } from '../../../../mocks/logger.mock';

/**
 * ES Import statements documentation:
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import
 */
suite("'package.json' Parser", () => {
  let parser: PackageJsonParser;
  setup(() => {
    parser = new PackageJsonParser(new LoggerMock());
  });

  test('Basic', () => {
    const source = `
    {
      "name": "goof",
      "version": "1.0.1",
      "description": "A vulnerable todo demo application",
      "homepage": "https://snyk.io/",
      "repository": {
        "type": "git",
        "url": "https://github.com/Snyk/snyk-todo-list-demo-app/"
      },
      "scripts": {
        "dev": "nodemon ./app.js",
        "start": "node app.js",
        "build": "browserify -r jquery > public/js/bundle.js",
        "cleanup": "mongo express-todo --eval 'db.todos.remove({});'",
        "test": "snyk test"
      },
      "dependencies": {
        "adm-zip": "^0.2.7",
        "body-parser": "1.9.0",
        "cfenv": "^1.0.4"
      },
      "devDependencies": {
        "browserify": "^13.1.1",
        "nodemon": "^2.0.7",
        "snyk": "^1.244.0"
      },
      "license": "Apache-2.0"
    }
    `;
    const modules = parser.getModules('package.json', source);
    strictEqual(modules.length, 3);

    strictEqual(modules[0].name, 'adm-zip');
    strictEqual(modules[0].line, 19);

    strictEqual(modules[1].name, 'body-parser');
    strictEqual(modules[1].line, 20);

    strictEqual(modules[2].name, 'cfenv');
    strictEqual(modules[2].line, 21);
  });

  test('Same line dependencies', () => {
    const source = `
    {
      "dependencies": {
          "adm-zip": "^0.2.7", "body-parser": "1.9.0"
      }
    }
    `;
    const modules = parser.getModules('package.json', source);
    strictEqual(modules.length, 2);

    strictEqual(modules[0].name, 'adm-zip');
    strictEqual(modules[0].line, 4);

    strictEqual(modules[1].name, 'body-parser');
    strictEqual(modules[1].line, 4);
  });

  test('No dependencies', () => {
    const source = `
    {
      "dependencies": {
      }
    }
    `;
    const modules = parser.getModules('package.json', source);
    strictEqual(modules.length, 0);
  });

  test("Missing 'dependencies' node", () => {
    const source = `{}`;
    const modules = parser.getModules('package.json', source);
    strictEqual(modules.length, 0);
  });

  test('devDependencies when --dev is in CLI parameters', () => {
    const source = `
    {
      "devDependencies": {
          "adm-zip": "^0.2.7"
      }
    }
    `;
    parser = new PackageJsonParser(new LoggerMock(), '--dev');
    const modules = parser.getModules('package.json', source);

    strictEqual(modules.length, 1);
    strictEqual(modules[0].name, 'adm-zip');
    strictEqual(modules[0].line, 4);
  });
});
