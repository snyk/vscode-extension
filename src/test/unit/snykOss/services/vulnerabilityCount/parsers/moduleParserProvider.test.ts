import { strictEqual } from 'assert';
import { IConfiguration } from '../../../../../../snyk/common/configuration/configuration';
import { ModuleParserProvider } from '../../../../../../snyk/common/services/moduleParserProvider';
import { Language } from '../../../../../../snyk/common/types';
import { PackageJsonParser } from '../../../../../../snyk/snykOss/services/vulnerabilityCount/parsers/packageJsonParser';
import { LoggerMock } from '../../../../mocks/logger.mock';

suite('OSS ModuleParserProvider', () => {
  const configuration = {
    getAdditionalCliParameters: () => undefined,
  } as IConfiguration;

  test('PackageJsonParser is returned for PJSON', () => {
    const parser = ModuleParserProvider.getInstance(Language.PJSON, new LoggerMock(), configuration);
    strictEqual(parser instanceof PackageJsonParser, true);
  });

  test('Undefined instance is returned for non-supported language', () => {
    const parser = ModuleParserProvider.getInstance(-1 as Language, new LoggerMock(), configuration);
    strictEqual(parser, undefined);
  });
});
