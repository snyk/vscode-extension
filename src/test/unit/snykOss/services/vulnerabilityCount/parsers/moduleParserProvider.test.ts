import { strictEqual } from 'assert';
import { ModuleParserProvider } from '../../../../../../snyk/common/services/moduleParserProvider';
import { Language } from '../../../../../../snyk/common/types';
import { BabelParser } from '../../../../../../snyk/snykOss/services/vulnerabilityCount/parsers/babelParser';
import { LoggerMock } from '../../../../mocks/logger.mock';

suite('OSS ModuleParserProvider', () => {
  test('Babel parser is returned for TS and JS', () => {
    const parser = ModuleParserProvider.getInstance(Language.JavaScript, new LoggerMock());
    strictEqual(parser instanceof BabelParser, true);
  });

  test('Undefined instance is returned for non-supported language', () => {
    const parser = ModuleParserProvider.getInstance(-1, new LoggerMock());
    strictEqual(parser, undefined);
  });
});
