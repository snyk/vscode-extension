import { strictEqual } from 'assert';
import { Language } from '../../../../../../snyk/common/types';
import { BabelParser } from '../../../../../../snyk/snykOss/services/vulnerabilityCount/parsers/babelParser';

/**
 * ES Import statements documentation:
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import
 */
suite('Babel Parser', () => {
  let parser: BabelParser;
  setup(() => {
    parser = new BabelParser();
  });

  test('CommonJS modules', () => {
    const source = `
    var _ = require('lodash');
    var express = require('express');
    `;
    const modules = parser.getModules('test.js', source, Language.JavaScript);
    strictEqual(modules.length, 2);

    strictEqual(modules[0].name, 'lodash');
    strictEqual(modules[0].line, 2);

    strictEqual(modules[1].name, 'express');
    strictEqual(modules[1].line, 3);
  });

  test('Entire ES modules', () => {
    const source = `
    import * as _ from 'lodash';
    import * as express from 'express';
    `;

    const modules = parser.getModules('test.ts', source, Language.TypeScript);

    strictEqual(modules.length, 2);
    strictEqual(modules[0].name, 'lodash');
    strictEqual(modules[0].line, 2);

    strictEqual(modules[1].name, 'express');
    strictEqual(modules[1].line, 3);
  });

  test('Single ES module export', () => {
    const source = `
    import { _ } from 'lodash';
    `;

    const modules = parser.getModules('test.ts', source, Language.TypeScript);

    strictEqual(modules.length, 1);
    strictEqual(modules[0].name, 'lodash');
    strictEqual(modules[0].line, 2);
  });

  test('Multiple ES module exports', () => {
    const source = `
    import { test1, test2 } from 'lodash';
    `;

    const modules = parser.getModules('test.ts', source, Language.TypeScript);

    strictEqual(modules.length, 1);
    strictEqual(modules[0].name, 'lodash');
    strictEqual(modules[0].line, 2);
  });

  test('Single aliased ES module export', () => {
    const source = `
    import { test1 as x, test2 as y } from 'lodash';
    `;

    const modules = parser.getModules('test.ts', source, Language.TypeScript);

    strictEqual(modules.length, 1);
    strictEqual(modules[0].name, 'lodash');
    strictEqual(modules[0].line, 2);
  });

  test('Multiple aliased ES module exports', () => {
    const source = `
    import { test1 as x, test2 as y } from 'lodash';
    import { test3 as z, test4 as e } from 'express';
    `;

    const modules = parser.getModules('test.ts', source, Language.TypeScript);

    strictEqual(modules.length, 2);
    strictEqual(modules[0].name, 'lodash');
    strictEqual(modules[0].line, 2);
    strictEqual(modules[1].name, 'express');
    strictEqual(modules[1].line, 3);
  });

  test('Import for side effects', () => {
    const source = `
    (async () => {
      if (somethingIsTrue) {
        // import module for side effects
        await import('express');
      }
    })();
    `;

    const modules = parser.getModules('test.ts', source, Language.TypeScript);

    strictEqual(modules.length, 1);
    strictEqual(modules[0].name, 'express');
    strictEqual(modules[0].line, 5);
  });

  test('Same line import', () => {
    const source = `
    import * as _ from 'lodash'; import * as express from 'express';
    `;

    const modules = parser.getModules('test.ts', source, Language.TypeScript);

    strictEqual(modules.length, 2);
    strictEqual(modules[0].name, 'lodash');
    strictEqual(modules[0].line, 2);

    strictEqual(modules[1].name, 'express');
    strictEqual(modules[1].line, 2);
  });
});
