import EventEmitter from 'events';
import { ImportedModule, ModuleVulnerabilityCount } from './services/vulnerabilityCount/importedModule';

export enum VulnerabilityCountEvents {
  PackageJsonFound = 'packageJsonFound',
  Start = 'start',
  Tested = 'tested',
  Done = 'done',
  Error = 'error',
}

export class VulnerabilityCountEmitter extends EventEmitter {
  onPackageJsonFound(fileName: string): void {
    this.emit(VulnerabilityCountEvents.PackageJsonFound, fileName);
  }

  onStartTesting(importedModules: ImportedModule[]): void {
    this.emit(VulnerabilityCountEvents.Start, importedModules);
  }

  onTested(moduleInfo: ModuleVulnerabilityCount): void {
    this.emit(VulnerabilityCountEvents.Tested, moduleInfo);
  }

  onDone(moduleInfos: ModuleVulnerabilityCount[]): void {
    this.emit(VulnerabilityCountEvents.Done, moduleInfos);
  }

  onError(error: Error): void {
    this.emit(VulnerabilityCountEvents.Error, error);
  }
}
